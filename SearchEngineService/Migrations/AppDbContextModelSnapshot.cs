// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SearchEngineService.Data;

#nullable disable

namespace SearchEngineService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SearchEngineService.Models.Content", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Reactions")
                        .HasColumnType("int");

                    b.Property<int?>("ReadingTime")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.HasIndex("Provider", "ExternalId")
                        .IsUnique();

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("SearchEngineService.Models.ContentScore", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<double>("BaseScore")
                        .HasColumnType("double");

                    b.Property<double>("EngagementScore")
                        .HasColumnType("double");

                    b.Property<double>("FinalPopularityScore")
                        .HasColumnType("double");

                    b.Property<double>("RecencyScore")
                        .HasColumnType("double");

                    b.Property<double>("TypeWeight")
                        .HasColumnType("double");

                    b.HasKey("ContentId");

                    b.ToTable("ContentScores");
                });

            modelBuilder.Entity("SearchEngineService.Models.ContentScore", b =>
                {
                    b.HasOne("SearchEngineService.Models.Content", "Content")
                        .WithOne("Score")
                        .HasForeignKey("SearchEngineService.Models.ContentScore", "ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");
                });

            modelBuilder.Entity("SearchEngineService.Models.Content", b =>
                {
                    b.Navigation("Score")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
